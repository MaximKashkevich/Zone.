@charset "UTF-8";
@font-face {
  font-family: "DM Sans";
  src: url("fonts/DMSans18pt-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "DM Sans";
  src: url("fonts/DMSans18pt-SemiBold.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "DM Sans";
  src: url("fonts/DMSans18pt-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: #ffffff;
  --rounded-l: 6px;
  --rounded-xl: 36px;
  --font-family-base: "DM Sans", sans-serif;
  --container-width: 1170px;
  --container-padding-x: 20px;
  --section-padding-y: 70px;
  --transition-duration: 0.2s;
}

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Убирает серую подсветку при тапе на мобильных устройствах (iOS/Android)
 */
button {
  -webkit-tap-highlight-color: transparent;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none], [fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none], [stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
body {
  font-family: var(--font-family-base);
  font-weight: 400;
  font-size: 16px;
  line-height: 1.28;
  color: var(--light);
  background: #111827;
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1 {
  font-size: clamp(43px, 43px + (60 - 43) * (100vw - 320px) / (1920px - 320px), 60px);
}

h2 {
  font-size: clamp(36px, 36px + (40 - 36) * (100vw - 320px) / (1920px - 320px), 40px);
}

h3 {
  font-size: clamp(26px, 26px + (30 - 26) * (100vw - 320px) / (1920px - 320px), 30px);
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .mobile-hidden {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

.button {
  padding: 0;
  background-color: transparent;
  border: none;
  font-size: clamp(14px, 14px + (12 - 14) * (100vw - 320px) / (1920px - 320px), 12px);
  color: #f9fafb;
  background: linear-gradient(90.35deg, #2563eb 0.36%, #d946ef 201.02%);
  height: 42px;
  padding: 12px 24px;
  border-radius: 5px;
  transition: transform var(--transition-duration) ease;
}
@media (hover: hover) {
  .button:hover {
    transform: translateY(-2px);
  }
}
@media (hover: none) {
  .button:active {
    transform: translateY(-2px);
  }
}

.header__inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: 40px;
}
.header__menu {
  margin-left: auto;
  margin-right: 30px;
}
.header__list {
  display: flex;
  align-items: center;
  justify-content: space-between;
  -moz-column-gap: 30px;
       column-gap: 30px;
  margin-left: auto;
}
.header__link {
  color: inherit;
  font-size: clamp(12px, 12px + (14 - 12) * (100vw - 320px) / (1920px - 320px), 14px);
  color: #f9fafb;
  font-weight: 500;
  position: relative;
  display: inline-flex;
  align-items: center;
  height: 48px;
}
.header__link, .header__link:hover {
  text-decoration: none;
}
@media (hover: hover) {
  .header__link:hover::after {
    width: 100%;
  }
}
@media (hover: none) {
  .header__link:active::after {
    width: 100%;
  }
}
.header__link::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50%;
  height: 2px;
  width: 0%;
  background-color: var(--color-light);
  transition: width var(--transition-duration) ease;
}
@media (max-width: 1023px) {
  .header__inner {
    padding-top: 20px;
  }
}

.burger__button-menu {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 48;
  aspect-ratio: 1;
  position: relative;
  height: 48px;
  color: var(--color-light);
}
.burger__button-menu::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  background: var(--color-light);
  height: 2px;
  width: 100%;
  box-shadow: 0 16px, 0 -16px;
  border-radius: 10px;
}
.burger__button-menu-close {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 48;
  aspect-ratio: 1;
  position: absolute;
  right: -6px;
  top: 19px;
  height: 48px;
}
.burger__button-menu-close::before, .burger__button-menu-close::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  height: 2px;
  width: 100%;
  background: var(--color-light);
  border-radius: 10px;
}
.burger__button-menu-close::before {
  transform: translate(-50%, -50%) rotate(45deg);
}
.burger__button-menu-close::after {
  transform: translate(-50%, -50%) rotate(-45deg);
}

.mobile-overlay {
  position: fixed;
  margin: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: inherit;
}
.mobile-overlay:modal {
  max-width: 100%;
  max-height: 100%;
}
.mobile-overlay-list {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 30px;
  font-weight: 500;
  color: var(--color-light);
}

.hero {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-family: var(--font-family-base);
  padding-top: var(--section-padding-y);
}
.hero__main {
  display: flex;
  flex-direction: column;
  row-gap: 30px;
}
.hero__title {
  font-size: clamp(50px, 50px + (100 - 50) * (100vw - 320px) / (1920px - 320px), 100px);
  background: linear-gradient(89.83deg, #2563eb 0.11%, #d946ef 58.65%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-weight: 700;
  line-height: 2;
}
@supports not ((-webkit-background-clip: text) or (background-clip: text)) {
  .hero__title {
    color: #2563eb;
  }
}
.hero__description {
  font-size: clamp(15px, 15px + (18 - 15) * (100vw - 320px) / (1920px - 320px), 18px);
  font-weight: 500;
  color: #e5e7eb;
  line-height: 1.6;
  max-width: 534px;
}
.hero__actions {
  display: flex;
  align-items: center;
  -moz-column-gap: 20px;
       column-gap: 20px;
}
@media (max-width: 1280px) {
  .hero__image {
    width: 60%;
    height: auto;
  }
}
@media (max-width: 1023px) {
  .hero__image {
    width: 50%;
    height: auto;
  }
}
@media (max-width: 767px) {
  .hero {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .hero__main {
    align-items: center;
    text-align: center;
  }
}/*# sourceMappingURL=styles.css.map */